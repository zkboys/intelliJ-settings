<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="531" />
    <option name="newTranslationDialogY" value="358" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="stringified" />
      <item value="Order of instructions in CSS is important: instructions with equal specificity that occur later in the file take the priority. But when a selector with a higher specificity (e.g. p a { color: green;}) comes before the selector it overrides (e.g.: a { color: green;}), the priority is given to the first one. Even if it works properly, this is harder to anticipate the behaviour of the stylesheet while reading as it goes against the principle that the last instruction takes the priority." />
      <item value="Selectors of lower specificity should come before overriding selectors of higher specificity" />
      <item value="Otherwise calc() function will be invalid and the entire rule using it will be ignored." />
      <item value="there should not be any division by zero" />
      <item value="To perform calculations when specifying a CSS property calc() function can be used. This function takes single expression as parameter. When writing this expression some rules must be respected:" />
      <item value="Expressions within &quot;calc&quot; should be valid" />
      <item value="There was a typo which lead the semicolon to be doubled, i.e. ;;." />
      <item value="It was meant to be replaced by one more property declaration, but this was forgotten." />
      <item value="Extra semicolons are usually introduced by mistake, for example because:" />
      <item value="Extra semicolons should be removed" />
      <item value="Having the import of the same file twice, makes one of them useless. Leaving them in reduces the code’s readability, since their presence can be confusing." />
      <item value="Duplicate imports should be removed" />
      <item value="An empty multi-line comment is likely to be a mistake and doesn’t help to improve the readability of the code. For these reasons, it should be removed." />
      <item value="Multi-line comments should not be empty" />
      <item value="Having duplicated font names doesn’t help to read the font declaration and may be an indicator the author of the line was not sure how to configure it. This rule raises an issue when font or font-family properties contain a duplicated font name. This rule ignores sass, @less, and var(--custom-property) variable syntaxes." />
      <item value="Duplicated font names should be removed" />
      <item value="Strings should not contain new lines" />
      <item value="Leftover empty blocks are usually introduced by mistake. They are useless and prevent readability of the code. They should be removed or completed with real code." />
      <item value="Empty blocks should be removed" />
      <item value="Duplication of selectors might indicate a copy-paste mistake." />
      <item value="Duplication of selectors might indicate a copy-paste mistake. The rule detects the following kinds of duplications:" />
      <item value="Selectors should not be duplicated" />
      <item value="CSS files should not be empty" />
      <item value="there is no generic font family in the list" />
      <item value="It’s recommended to always define a generic font family for each declaration of font or font-family to get a less degraded situation than relying on the default browser font. All browsers should implement a list of generic font matching these families: Serif, Sans-serif, cursive, fantasy, Monospace." />
      <item value="If none of the font names defined in a font or font-family declaration are available on the browser of the user, the browser will display the text using its default font." />
      <item value="Font declarations should contain at least one generic font family" />
      <item value="!important within keyframes declarations is completely ignored in some browsers and therefore it should not be used to be consistent among all browsers." />
      <item value="&quot;!important&quot; should not be used on &quot;keyframes&quot;" />
      <item value="当前平台折算后合计" />
      <item value="shop Platform Available Credit Total" />
      <item value="CSS allows duplicate property names but only the last instance of a duplicated name determines the actual value that will be used for it. Therefore, changing values of other occurrences of a duplicated name will have no effect and may cause misunderstandings and bugs." />
      <item value="Properties should not be duplicated" />
      <item value="The W3C specifications define the valid pseudo-class selectors. Only the official and browser-specific pseudo-class selectors should be used to get the expected impact in the final rendering." />
      <item value="Pseudo-class selectors should be valid" />
      <item value="The W3C specifications define the valid pseudo-element selectors. Only the official and browser-specific pseudo-element selectors should be used to get the expected impact in the final rendering." />
      <item value="Pseudo-element selectors should be valid" />
      <item value="The W3C specifications define the valid media features. Only the official and browser-specific media features should be used to get the expected impact in the final rendering." />
      <item value="features" />
      <item value="The W3C specifications define the valid at-rules. Only the official and browser-specific at-rules should be used to get the expected impact in the final rendering." />
      <item value="linear-gradient was standardized with CSS3. Before that, it was possible to use different non-standard values to define the gradient’s direction. Because these values are not standard, they are not supported in all browsers and therefore they should no longer be used in order to get the expected gradient in the latest browser versions that support CSS3." />
      <item value="&quot;linear-gradient&quot; directions should be valid" />
      <item value="The code should be refactored to consider the longhand property or to remove it completely" />
      <item value="longhand" />
      <item value="precising" />
      <item value="padding is defining a general behaviour and padding-left" />
      <item value="Compliant" />
      <item value="Noncompliant" />
      <item value="A shorthand property defined after a longhand property will completely override the value defined in the longhand property making the longhand one useless. The code should be refactored to consider the longhand property or to remove it completely." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="480" />
        <entry key="ENGLISH" value="467" />
        <entry key="AFRIKAANS" value="2" />
        <entry key="DANISH" value="1" />
        <entry key="FILIPINO" value="4" />
        <entry key="ROMANIAN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="4" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1673098301702" />
  </component>
  <component name="Settings">
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="1e081ca7b68e1943" />
        <option name="primaryLanguage" value="ESPERANTO" />
      </youdao-translate>
    </option>
  </component>
</application>